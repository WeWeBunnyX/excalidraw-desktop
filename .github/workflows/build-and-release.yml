name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      draft_release:
        description: 'Create draft release'
        required: false
        default: 'true'
        type: boolean

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: windows-latest
            platform: win32
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ matrix.platform }}" = "linux" ]; then
            npm run dist:linux -- --publish=never
          elif [ "${{ matrix.platform }}" = "win32" ]; then
            npm run dist -- --publish=never
          elif [ "${{ matrix.platform }}" = "darwin" ]; then
            npm run dist -- --publish=never
          fi
        shell: bash

      - name: Upload Linux artifacts
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: linux-packages
          path: |
            dist/excalidraw*.deb
            dist/Excalidraw*.AppImage

      - name: Upload Windows artifacts
        if: matrix.platform == 'win32'
        uses: actions/upload-artifact@v4
        with:
          name: windows-packages
          path: |
            dist/Excalidraw*.exe
            dist/excalidraw*.msi

      - name: Upload macOS artifacts
        if: matrix.platform == 'darwin'
        uses: actions/upload-artifact@v4
        with:
          name: macos-packages
          path: |
            dist/Excalidraw*.dmg

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: ${{ github.event.inputs.draft_release == 'true' || github.event_name == 'push' }}
          files: |
            artifacts/**/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}